# HTTP
server {
    # PORT
    listen 80 default_server;
    listen [::]:80 default_server;

    # NAME
    server_name localhost;

    # SECURITY
    more_clear_headers 'Server';
    add_header X-XSS-Protection "1; mode=block";
    add_header X-Frame-Options "SAMEORIGIN";
    add_header X-Content-Type-Options nosniff;
    add_header Access-Control-Allow-Origin https://$server_name;
    add_header Access-Control-Allow-Methods "GET, POST, HEAD";

    # REDIRECT
    return 302 https://$server_name$request_uri;
}

# HTTPS
server {
    # PORT
    listen 443 ssl;
    
    # NAME
    server_name localhost;

    # LOG
    error_log  /var/log/nginx/error.log;
    access_log /var/log/nginx/access.log;
    
    # ROOT
    root /var/www/html;

    # SSL
    ssl on;
    ssl_certificate /etc/ssl/nginx.crt;
    ssl_certificate_key /etc/ssl/nginx.key;
    #ssl_dhparam /etc/nginx/ssl/nginx.pem;
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_session_timeout 5m;
    ssl_ciphers "EECDH+ECDSA+AESGCM EECDH+aRSA+AESGCM EECDH+ECDSA+SHA384 EECDH+ECDSA+SHA256 EECDH+aRSA+SHA384 EECDH+aRSA+SHA256 EECDH+aRSA+RC4 EECDH EDH+aRSA HIGH !RC4 !aNULL !eNULL !LOW !3DES !MD5 !EXP !PSK !SRP !DSS";
    ssl_prefer_server_ciphers on;

    # REMOVE UNWANTED REQUESTS
    if ($request_method !~ ^(GET|POST|HEAD)$)
    {
        return 405;
    }

    # SECURITY
    more_clear_headers 'Server';
    add_header X-XSS-Protection "1; mode=block";
    add_header X-Frame-Options "SAMEORIGIN";
    add_header X-Content-Type-Options nosniff;
    add_header Access-Control-Allow-Origin https://$server_name;
    add_header Access-Control-Allow-Methods "GET, POST, HEAD";

    # BASE LOCATION
    location / {
        # NAXSI
        include /etc/nginx/naxsi.rules;

        # PROXY PARAMS
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # REVERSE PROXY TO VARNISH
        proxy_pass http://varnish:6081;
    }

    # PUBLIC LOCATION
    location /public
    {
        # NAXSI
        include /etc/nginx/naxsi.rules;

        access_log off;
        expires 1d;

        # prevent hotlink
        valid_referers none blocked ~.google. ~.bing. ~.yahoo. server_names ~($host);
        if ($invalid_referer) {
            return 403;
        }

        # PROXY PARAMS
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # REVERSE PROXY TO VARNISH
        proxy_pass http://varnish:6081;
    }

    # ERROR PAGES
    error_page 404 /404.html;
    error_page 500 502 503 504 /50x.html;
}